version: '3.4'

services:
  api-gateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: API-Gateway/Dockerfile
    depends_on: 
        - tweet-service
        - trend-service
        - user-service

  tweet-service:
    image: ${DOCKER_REGISTRY-}tweetservice
    build:
      context: .
      dockerfile: tweet-service/Dockerfile

  s65:
    image: postgres
    container_name: Database
    restart: always
    environment:
      POSTGRES_USER: postgres  
      POSTGRES_PASSWORD: admin
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8001:8080
  
  trend-service:
    image: ${DOCKER_REGISTRY-}trendservice
    build:
      context: .
      dockerfile: trend-service/Dockerfile


  user-service:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: user-service/Dockerfile

  zookeeper:
    image: zookeeper
    restart: always
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "trend_topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock